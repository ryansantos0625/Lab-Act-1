<?php
// Database.php
class Database {
    private $host = "localhost";
    private $db_name = "school";
    private $username = "root";
    private $password = "";
    protected $conn;

    public function __construct() {
        try {
            $this->conn = new PDO("mysql:host={$this->host};dbname={$this->db_name}", 
                                  $this->username, $this->password);
            $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        } catch (PDOException $e) {
            die("Connection failed: " . $e->getMessage());
        }
    }

    // CREATE
    public function create($table, $fields, $values) {
        $sql = "INSERT INTO $table ($fields) VALUES ($values)";
        return $this->conn->exec($sql);
    }

    // READ
    public function read($table) {
        $stmt = $this->conn->prepare("SELECT * FROM $table");
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // UPDATE
    public function update($table, $set, $where) {
        $sql = "UPDATE $table SET $set WHERE $where";
        return $this->conn->exec($sql);
    }

    // DELETE
    public function delete($table, $where) {
        $sql = "DELETE FROM $table WHERE $where";
        return $this->conn->exec($sql);
    }
}

// Student.php
class Student extends Database {
    private $table = "students";

    public function addStudent($name, $course) {
        return $this->create($this->table, "name, course", "'$name', '$course'");
    }

    public function getStudents() {
        return $this->read($this->table);
    }
}

// Attendance.php
class Attendance extends Database {
    private $table = "attendance";

    public function markAttendance($student_id, $status) {
        return $this->create($this->table, "student_id, status", "'$student_id', '$status'");
    }

    public function getAttendance() {
        return $this->read($this->table);
    }
}

// Example usage with HTML
$studentObj = new Student();
$attendanceObj = new Attendance();

// Add student
if (isset($_POST['addStudent'])) {
    $studentObj->addStudent($_POST['name'], $_POST['course']);
}

// Mark attendance
if (isset($_POST['markAttendance'])) {
    $attendanceObj->markAttendance($_POST['student_id'], $_POST['status']);
}

$students = $studentObj->getStudents();
$attendance = $attendanceObj->getAttendance();
?>

<!DOCTYPE html>
<html>
<head>
    <title>Student & Attendance CRUD</title>
</head>
<body>
    <h2>Add Student</h2>
    <form method="post">
        <input type="text" name="name" placeholder="Student Name" required>
        <input type="text" name="course" placeholder="Course" required>
        <button type="submit" name="addStudent">Add Student</button>
    </form>

    <h2>Students List</h2>
    <ul>
        <?php foreach ($students as $s): ?>
            <li><?= $s['id'] . " - " . $s['name'] . " (" . $s['course'] . ")" ?></li>
        <?php endforeach; ?>
    </ul>

    <h2>Mark Attendance</h2>
    <form method="post">
        <input type="number" name="student_id" placeholder="Student ID" required>
        <select name="status">
            <option value="Present">Present</option>
            <option value="Absent">Absent</option>
        </select>
        <button type="submit" name="markAttendance">Mark</button>
    </form>

    <h2>Attendance Records</h2>
    <ul>
        <?php foreach ($attendance as $a): ?>
            <li><?= "Student ID: " . $a['student_id'] . " - Status: " . $a['status'] ?></li>
        <?php endforeach; ?>
    </ul>
</body>
</html>
